# Generated by Django 5.0.1 on 2024-04-11 09:07

import ckeditor.fields
import django.core.validators
import sqltranslator.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sqltranslator', '0002_alter_gpt_frequency_penalty_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='GPT_4',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField(default=0, help_text='Temperature', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('max_output_tokens', models.IntegerField(default=1000, help_text='Maximum number of output tokens', validators=[django.core.validators.MinValueValidator(0)])),
                ('top_p', models.IntegerField(default=1, help_text='Top P', validators=[django.core.validators.MinValueValidator(0)])),
                ('frequency_penalty', models.FloatField(default=0.7, help_text='Frequency Penalty', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('presence_penalty', models.FloatField(default=0.3, help_text='Presence Penalty', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('query', models.TextField(help_text='The query to ask in a natural lenguage. This field is required.')),
                ('final_prompt', ckeditor.fields.RichTextField(blank=True, help_text='The final prompt which is passed to the LLM.', null=True)),
                ('prediction', ckeditor.fields.RichTextField(blank=True, help_text='The resulting prediction of the model.', null=True)),
                ('last_run', models.DateTimeField(blank=True, help_text='The last time this model was executed.', null=True)),
                ('name', models.CharField(default=sqltranslator.models.uuid4_sql_gen, help_text='A unique name to identify this query.', max_length=255, unique=True)),
                ('query_result', ckeditor.fields.RichTextField(blank=True, help_text='The result of the query over the table', null=True)),
                ('query_is_valid', models.BooleanField(blank=True, help_text='If the predicted query has been successfully executed.', null=True)),
            ],
            options={
                'verbose_name_plural': 'GPT_4',
            },
        ),
        migrations.RenameModel(
            old_name='GPT',
            new_name='GPT3_5',
        ),
        migrations.AlterModelOptions(
            name='gpt3_5',
            options={'verbose_name_plural': 'GPT3_5'},
        ),
    ]
